#!/bin/bash
PWD=$(pwd)

my_real_dir() {
    if [[ $(type -t progdir) == function ]]
    then
        progdir
    else
        dirname $(realpath $0)
    fi
}

in_tree_file() {
    echo $(my_real_dir)/../bake-intree-init
}

in_tree_file_exist() {
    [[ -f $(in_tree_file) ]]
}

in_tree_file_exist \
    && source $(in_tree_file) \
    || $(bashlibs --load-base)

include verbose.sh
set_verbose_level_to_info
include bake_config.sh
include os_detection.sh

load_bakerc() {
    [[ -f $PWD/.bakerc ]] \
        && source $PWD/.bakerc

    [[ -z $PROJECTS_ORDER ]] \
        && eexit "PROJECTS_ORDER variable in .bakerc is not defined"
}

hosts() {
    args \
        | sed 's/-s//g' \
        | sed 's/--server//g'
}

update_repositories() {
    local host

    for host in $(hosts)
    do
        host_is_ubuntu $host \
            || return

        ssh root@$host \
            apt-get update
    done
}

bake_all() {
    update_repositories

    local i
    for i in $PROJECTS_ORDER
    do
        _LIBRARIES_INCLUDED= \
            $(progdir)/bake \
                $(args) \
                -p $i
    done
}

run_tests() {
    [[ $PORTAGE_TREE_NAME == bashlibs ]] \
        || return

    for host in $(hosts)
    do
        ssh root@$host \
            bashlibs -v -v --test all
    done
}

all_debs() {
    local i

    for i in $PROJECTS_ORDER
    do
        echo -n "/var/cache/apt/archives/${i}*.deb "
    done
}

force_install_of_all_debs() {
    local host=$1

    ssh root@$host \
        dpkg -i $(all_debs)
}

host_is_ubuntu() {
    local host=$1

     ssh root@$host \
        cat /etc/lsb-release 2>/dev/null \
        | grep -q Ubuntu
}

verify_all_installed() {
    local host

    for host in $(hosts)
    do
        host_is_ubuntu $host \
            || return

        force_install_of_all_debs $host

        ssh root@$host \
            apt-get install -f -y

        force_install_of_all_debs $host

        ssh root@$host \
            apt-get install -f -y
    done
}

main() {
    load_bakerc
    bake_all
    verify_all_installed
    run_tests
}
main
