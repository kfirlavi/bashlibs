#!/bin/bash
my_real_dir() {
    if [[ $(type -t progdir) == function ]]
    then
        progdir
    else
        dirname $(realpath $0)
    fi
}

in_tree_file() {
    echo $(my_real_dir)/../bake-intree-init
}

in_tree_file_exist() {
    [[ -f $(in_tree_file) ]]
}

in_tree_file_exist \
    && source $(in_tree_file) \
    || $(bashlibs --load-base)

include verbose.sh
set_verbose_level_to_info
include bake_config.sh
include bake_gentoo.sh
include bake_debian.sh
include package_build.sh
include deb_repository.sh
include bake_cmdline.sh
include bake_cmake.sh
include bake.sh

main() {
    local host
    local project
    local projects=

    cmdline $(args)
    exit_if_path_is_not_in_source_tree $SOURCES_TREE_PATH
    cd $SOURCES_TREE_PATH
    list_projects_if_needed
    add_current_directory_project_if_no_projects_supplied
    verify_project_provided
    work_from_source_tree_root
    show_on_which_hosts_we_build
    verify_all_hosts

    for host in $TARGET_BUILD_HOSTS
    do
        TARGET_BUILD_HOST=$host
        set_rsync_ssh_connection_with_socket root $host

        for project in $PROJECTS
        do
            set_project_name_and_project_path \
                $project

            load_configuration_files \
                $(project_path)

            check_gentoo_commands
            set_gentoo_ebuild_eapi_if_needed

            show_build_info \
                $(project_name) \
                $(project_path)

            create_$(package_type)_package $host

            projects="$projects =$(package_full_name_with_version)"
        done

        target_os_is_gentoo \
            && do_install_gentoo_package \
                && install_package_on_gentoo $host $projects
    done
}
main
